name: Deploy

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  BRANCH_NAME: ${{ github.ref_name }}

jobs:
  deploy-to-production:
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Netlify CLI
        run: npm install netlify-cli@17.10.1 -g

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        env:
          VITE_API_URL: ${{ vars.BACKEND_PRODUCTION }} # Use environment variable
        run: npm run build

      - name: Create _redirects File
        run: echo '/* /index.html 200' > dist/_redirects

      - name: Deploy to Netlify
        id: netlify_deploy
        run: netlify deploy \
          --dir dist \
          --site ${{ secrets.NETLIFY_SITE_ID_PRODUCTION }} \
          --auth ${{ secrets.NETLIFY_API_TOKEN_PRODUCTION }} \
  build-to-staging:
    if: github.ref == 'refs/heads/develop' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: Install Netlify CLI
        run: npm install netlify-cli@17.10.1 -g

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        env:
          VITE_API_URL: ${{ vars.BACKEND_STAGING }} # Use environment variable
        run: npm run build

      - name: Create _redirects File
        run: echo '/* /index.html 200' > dist/_redirects

      - name: Deploy to Netlify
        id: netlify_deploy
        run: netlify deploy \
          --dir dist \
          --site ${{ secrets.NETLIFY_SITE_ID_STAGING }} \
          --auth ${{ secrets.NETLIFY_API_TOKEN_STAGING }} \